# –¶–µ–π –µ—Ç–∞–ø –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –∑ VS –≤ —à–≤–∏–¥–∫–æ–º—É —Ä–µ–∂–∏–º—ñ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è)
# üîπ –ë–∞–∑–æ–≤–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞–ø—É—Å–∫—É –¥–æ–¥–∞—Ç–∫–∞
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app

# –ö–æ–ø—ñ—é—î–º–æ wait-for-it.sh –¥–ª—è –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è RabbitMQ
COPY ./wait-for-it.sh /app/wait-for-it.sh

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ netcat —Ç–∞ –∑–∞–¥–∞—î–º–æ –ø—Ä–∞–≤–∞ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
RUN apt-get update && apt-get install -y netcat-openbsd \
    && chmod +x /app/wait-for-it.sh

EXPOSE 8080
EXPOSE 8081
EXPOSE 5017

# üîπ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–±–∏—Ä–∞–Ω–Ω—è –∫–æ–¥—É
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# –ö–æ–ø—ñ—é—î–º–æ –ª–∏—à–µ .csproj —Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
COPY ["CommentsApp.csproj", "./"]
RUN dotnet restore "./CommentsApp.csproj"

# –ö–æ–ø—ñ—é—î–º–æ –≤–µ—Å—å –∫–æ–¥ —ñ –∑–±–∏—Ä–∞—î–º–æ
COPY . . 
RUN dotnet build "./CommentsApp.csproj" -c ${BUILD_CONFIGURATION} -o /app/build

# üîπ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó (Release)
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./CommentsApp.csproj" -c ${BUILD_CONFIGURATION} -o /app/publish /p:UseAppHost=false

# üîπ –§—ñ–Ω–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É
FROM base AS final
WORKDIR /app

# –ö–æ–ø—ñ—é—î–º–æ –≤—Å—ñ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏ (–≤–∫–ª—é—á–∞—é—á–∏ wwwroot)
COPY --from=publish /app/publish . 

# –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ wwwroot —ñ—Å–Ω—É—î
RUN mkdir -p /app/wwwroot

# –ó–∞–ø—É—Å–∫–∞—î–º–æ –¥–æ–¥–∞—Ç–æ–∫ –∑ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è–º RabbitMQ
ENTRYPOINT ["/app/wait-for-it.sh", "rabbitmq_container:5672", "--", "dotnet", "CommentsApp.dll"]

# üîπ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è
ENV RABBITMQ_URI=amqp://guest:guest@rabbitmq_container:5672
ENV DOTNET_FLUSH_CONSOLE_OUTPUT=true
